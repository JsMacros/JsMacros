# This is a basic workflow to help you get started with Actions

name: Build Beta

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on: push

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      
    - uses: actions/github-script@v2
      id: fname
      with:
        result-encoding: string
        script: |
          const fs = require("fs");
          let file = fs.readFileSync("./gradle.properties");
          file = file.toString().split("\n").map(e => e.trim().startsWith("mod_version") ? `${e}-beta-${process.env.GITHUB_SHA.substring(0, 7)}` : e).join("\n");
          fs.writeFileSync("./gradle.properties", file);
          const mod_version = file.toString().split("\n").filter(e => e.trim().startsWith("mod_version"))[0].split("=")[1].trim();
          const archives_base_name = file.toString().split("\n").filter(e => e.trim().startsWith("archives_base_name"))[0].split("=")[1].trim();
          return `${archives_base_name}-${mod_version}`;
      
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
       distribution: 'adopt'
       java-version: '17'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build -x test

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ steps.fname.outputs.result }}
        path: ./dist/**/*