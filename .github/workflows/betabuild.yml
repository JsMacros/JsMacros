name: Build Beta

on: push

jobs:
  build:
    outputs:
      artifact_name: ${{ steps.fname.outputs.result }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/github-script@v2
        id: fname
        with:
          result-encoding: string
          script: |
            const fs = require("fs");
            let file = fs.readFileSync("./gradle.properties");
            file = file.toString().split("\n").map(e => e.trim().startsWith("mod_version") ? `${e}-beta-${process.env.GITHUB_SHA.substring(0, 7)}` : e).join("\n");
            fs.writeFileSync("./gradle.properties", file);
            const mod_version = file.toString().split("\n").filter(e => e.trim().startsWith("mod_version"))[0].split("=")[1].trim();
            const archives_base_name = file.toString().split("\n").filter(e => e.trim().startsWith("archives_base_name"))[0].split("=")[1].trim();
            return `${archives_base_name}-${mod_version}`;

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.fname.outputs.result }}
          path: ./dist/**/*


  publish_npm:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ needs.build.outputs.artifact_name }}
          path: dist

      - uses: actions/setup-node@v3
        name: Setup node
        with:
          registry-url: https://registry.npmjs.org/
          node-version: latest

      - uses: actions/github-script@v2
        id: shortsha
        name: Calculate short SHA
        with:
          result-encoding: string
          script: return process.env.GITHUB_SHA.substring(0, 7);

      # The types .d.ts file normally has a version number in it
      # This is useful for people using the file directly so they can download multiple versions and keep track of which one is which
      # But for the npm package, it's easier to rename it to be consistent than to dynamically edit the package.json and tsconfig.json
      - name: Remove version number from .d.ts file
        run:
          mv dist/typescript/headers/JsMacros-*.d.ts dist/typescript/headers/JsMacros.d.ts

      - name: Publish to node
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          cd dist/typescript
          npm version 0.0.0-${{ steps.shortsha.outputs.result }}
          npm publish --tag beta
